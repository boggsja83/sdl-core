#ifndef TYPES_H
#define TYPES_H
/******************************************************************************/
#include <cstdint>
/******************************************************************************/
typedef int16_t i16;
typedef int32_t i32;
typedef int64_t i64;

typedef uint16_t ui16;
typedef uint32_t ui32;
typedef uint64_t ui64;

typedef const char* str;

typedef i16 rt;
/******************************************************************************/
typedef enum {
    OKAY =		    0,
    QUIT =		    -1
} CORE_CODES;
/******************************************************************************/
typedef enum {
    KB_MEMSET_FAIL =	    -100
} KB_CODES;
/******************************************************************************/
typedef enum {
    SDL_INIT_FAIL =	    -200,
    IMG_INIT_FAIL =	    -201,
    MIX_INIT_FAIL =	    -202,
    CREATE_WINDOW_FAIL =    -210,
    CREATE_RENDERER_FAIL =  -211,
    CREATE_SURFACE_FAIL =   -212,
    CREATE_TEXTURE_FAIL =   -213,
    MIX_LOAD_WAV_FAIL =	    -220,
    IMG_LOAD_FAIL =	    -221
} SDL_WRAP_CODES;
/******************************************************************************/
typedef enum {
    ECS_INVALID_COMP =	    -300,
    ECS_LACKS_COMP =	    -301,
    ECS_INVALID_ID =	    -302
} ECS_CODES;
/******************************************************************************/
typedef enum {
    CM_NULL =		    0b0000,
    CM_POS =		    0b0001,
    CM_VEL =		    0b0010,
    CM_RENDPOS =	    0b0100,
    CM_TEXTURE =	    0b1000
} COMP_MASK;
// /******************************************************************************/
// typedef struct PP {
// /******************************************************************************/
//     i16 owner_id;
//     COMP_MASK cm;
//
//     PP(i16 own_id=-1, COMP_MASK pcm=CM_NULL){
// 	owner_id = own_id;
// 	cm = pcm;
//     }
// } PP;
// /******************************************************************************/
// typedef struct PP_pos : PP {
// /******************************************************************************/
//     float x;
//     float y;
//     float w;
//     float h;
//
//     PP_pos(i16 own_id=-1, COMP_MASK pcm=CM_NULL, float px=-1.f, float py=-1.f, float pw=-1.f, float ph=-1.f){
// 	owner_id = own_id;
// 	cm = pcm;
// 	x = px;
// 	y = py;
// 	w = pw;
// 	h = ph;
//     }
// } PP_pos;
// /******************************************************************************/
// typedef struct PP_rendpos : PP {
// /******************************************************************************/
//     float x;
//     float y;
//     float w;
//     float h;
//
//     PP_rendpos(i16 own_id=-1, COMP_MASK pcm=CM_NULL, i16 px=-1, i16 py=-1, i16 pw=-1, i16 ph=-1){
// 	owner_id = own_id;
// 	cm = pcm;
// 	x = px;
// 	y = py;
// 	w = pw;
// 	h = ph;
//     }
// } PP_rendpos;
// /******************************************************************************/
// typedef struct PP_vel : PP {
// /******************************************************************************/
//
// } PP_vel;
// /******************************************************************************/
// typedef struct PP_texture : PP {
// /******************************************************************************/
//
// } PP_texture;
// /******************************************************************************/




/******************************************************************************/
#endif
/******************************************************************************/
